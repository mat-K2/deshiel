- if params[:type] == "master" || params[:search_type] == "master"
  = form_tag search_index_path, :method => :get do
    = hidden_field_tag :search_type, :master
    = select_tag :master_genre, options_for_select(User::MASTER_GENRE_LIST, params[:master_genre])
    = submit_tag "このジャンルの師匠を探す"

- if @entries
  %h3
    = "「解決済みの問題から探す」検索結果：#{params[:entry_item]}"
  %table.table.table-bordered.table-striped
    %thead
      %tr
        %th 問題
        %th コメント
        %th 「ありがとう」の数
    %tbody
      - @entries.each do |question|
        %tr
          %td= question.content
          %td
            - question.comments.each do |comment|
              %ul
                %li
                  = comment.user.name if comment.user != current_user
                  = comment.content
            - unless current_user.thanked_objectives.include?(question)
              = form_for current_user.thanks.build do |f_t|
                = f_t.hidden_field :entry_id, :value => question.id
                = f_t.hidden_field :master_id, :value => question.thanks.first.try(:master_id)
                = f_t.hidden_field :content_type, :value => User::QUESTION_TYPE[:m]
                = f_t.submit "ありがとう"
          %td
            = question.thanks.count
  = form_for @entry do |f|
    = f.hidden_field :content, :value => params[:entry_item]
    = f.submit '登録する'

- elsif @masters
  %h3
    = "「師匠を探す」検索結果：#{params[:master_genre]}"
  %table.table.table-bordered.table-striped
    %thead
      %tr
        %th 名前
        %th 解決した問題
    %tbody
      - @masters.each do |master|
        %tr
          %td
            = link_to master.name, user_path(master.id)
          %td
            %ul
              - master.answer_entries.each do |entry|
                %li= entry.content
