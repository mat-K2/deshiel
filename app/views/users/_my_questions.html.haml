%h1 自身の問題一覧

%table.table.table-bordered.table-striped
  %tr
    %th 問題
    %th
    %th
    %th コメント

  - @questions.each do |question|
    %tr
      %td= question.content
      %td= link_to 'Edit', edit_entry_path(question)
      %td= link_to 'Destroy', question, :confirm => 'Are you sure?', :method => :delete
      %td
        - if question.comments.empty?
          = form_for @entry do |f|
            = f.text_field :content
            = f.fields_for :entry_relationships do |f2|
              = f2.hidden_field :parent_id, :value => question.id
              = f2.hidden_field :root_id, :value => question.id
            = f.hidden_field :content_type, :value => params[:type]
            = f.submit "コメントする"
        - else
          - question.comments.each_with_index do |comment, i|
            %ul
              %li
                = comment.user.email if comment.user != current_user
                = comment.content
                = link_to "削除", entry_path(comment, :content_type => params[:type]), :method => :delete
            - if i + 1 == question.comments.count
              - unless current_user.thanked_entries.include?(question)
                = form_for @entry do |f|
                  = f.text_field :content
                  = f.fields_for :entry_relationships do |f2|
                    = f2.hidden_field :parent_id, :value => comment.id
                    = f2.hidden_field :root_id, :value => question.id
                  = f.hidden_field :content_type, :value => params[:type]
                  = f.submit "コメントする"
                = form_for @thank do |f_t|
                  = f_t.hidden_field :entry_id, :value => question.id
                  = f_t.hidden_field :master_id, :value => question.user.masters.first.try(:id)
                  = f_t.hidden_field :content_type, :value => params[:type]
                  = f_t.submit "ありがとう"

%br
= link_to 'New Entry', new_entry_path